WITH ph AS MATERIALIZED (SELECT CAST($1 AS INTEGER) AS crate_id, CAST($2 AS VARCHAR) AS ret_phrase, CAST($3 AS type_category) AS ret_cat_1, CAST($4 AS type_category) AS ret_cat_2, CAST($5 AS VARCHAR) AS arg_phrase, CAST($6 AS type_category) AS arg_cat_1, CAST($7 AS type_category) AS arg_cat_2)SELECT v1.*, v2.* FROM (SELECT t1.id, t1.qual_symbol FROM prototype AS t1 , ph WHERE (EXISTS(SELECT * FROM prototype_type_ref AS ts1 INNER JOIN type_symbol AS ts2 ON ((ts1.type_id = ts2.id)) WHERE ((ts1.prototype_id = t1.id) AND (ts1.kind = 'return') AND (ts1.category = ANY(SELECT unnest(main.list_value('nominal', ph.ret_cat_1, ph.ret_cat_2)))) AND (CAST((ts2.symbol = ph.ret_phrase) AS BOOLEAN) IS DISTINCT FROM false))) AND EXISTS(SELECT * FROM prototype_type_ref AS ts1 INNER JOIN type_symbol AS ts2 ON ((ts1.type_id = ts2.id)) WHERE ((ts1.prototype_id = t1.id) AND (ts1.kind = 'arg') AND (ts1.category = ANY(SELECT unnest(main.list_value('nominal', ph.arg_cat_1, ph.arg_cat_2)))) AND (CAST((ts2.symbol = ph.arg_phrase) AS BOOLEAN) IS DISTINCT FROM false))) AND EXISTS(SELECT * FROM prototype_crate_ref AS ts1 WHERE ((ts1.prototype_id = t1.id) AND (CAST((ts1.crate_id = ph.crate_id) AS BOOLEAN) IS DISTINCT FROM false))))) AS v1 LEFT JOIN (SELECT ts2.since FROM prototype_deprecated_ref AS ts1 INNER JOIN deprecated AS ts2 ON ((ts1.deprecated_id = ts2.id)) WHERE (ts1.prototype_id = v1.id)) AS v2 ON (CAST('t' AS BOOLEAN)) ORDER BY v1.qual_symbol